plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.github.node-gradle.node' version '3.4.0'
}

group = 'com.study'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


//node {
//	version = '20.9.0'  // Node 버전을 지정해주세요.
//	npmVersion = '10.1.0' // npm 버전을 지정해주세요.
//	download = true
//	workDir = file("${project.buildFile}/nodejs")
//	nodeModulesDir = file("${project.projectDir}")
//}

node {
	download = true
	version = '20.9.0'  // Node 버전을 지정해주세요.
	npmVersion = '10.1.0' // npm 버전을 지정해주세요.
	distBaseUrl = "https://nodejs.org/dist"
	allowInsecureProtocol = null
	npmInstallCommand = "install"
	workDir = file("${project.projectDir}/.gradle/nodejs")
	npmWorkDir = file("${project.projectDir}/.gradle/npm")
	yarnWorkDir = file("${project.projectDir}/.gradle/yarn")
	nodeProjectDir = file("${project.projectDir}/src/main/resources/static")
	nodeProxySettings = ProxySettings.SMART
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	//jakarta validation
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	// https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator
//	implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'

}

tasks.named('test') {
	useJUnitPlatform()
}

task customNpmInstall(type: NpmTask, dependsOn: 'npmSetup') {
	args = ['install']
}
task copyFrontend(type: Copy, dependsOn: customNpmInstall) {
	from "${project.projectDir}/node_modules"
	into "${project.projectDir}/src/main/resources/static"
}

//build.dependsOn copyFrontend
//build.dependsOn customNpmInstall

processResources.dependsOn('npmInstall')






